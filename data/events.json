[null,{"name":"LoadServerPrefixes","temp":"","event-type":"1","_id":"LoadSubs","actions":[{"behavior":"1","interpretation":"0","code":"// Make sure it only runs once!!\n//------------\n\nif(!globalVars(\"server_prefixes_loaded\")){ \n  this.callNextAction(cache);\n  this.storeValue(true, 3,\"server_prefixes_loaded\", cache);\n}","storage":"0","varName":"","name":"Run Script"},{"behavior":"0","interpretation":"0","code":"Bot.prefixes = {};\nconsole.log('(Server Prefixes) Initiating Server Prefixes....');\nBot.checkCommand = function(msg) {\n\tconst fs = require(\"fs\");\n\tconst path = require(\"path\");\n\n\ttry {\n\t\tconst defaultTag = Files.data.settings.tag;\n\t\tconst separator = Files.data.settings.separator || '\\\\s+';\n\t\n\t\tlet content = msg.content;\n\t\tlet guild = msg.guild;\n\t\n\t\tcontent = content.split(new RegExp(separator))[0];\n\t\n\t\tconst filePath = path.join(\"data\",\"serverPrefixes.json\");\t\t\n\t\tif(fs.existsSync(filePath)){\n\t\t\tlet saved_prefixes = fs.readFileSync(filePath, \"utf8\");\n\t\t\ttry {\n\t\t\t\tthis.prefixes = JSON.parse(saved_prefixes);\t\t\n\t\t\t} catch(err){}\t\t\t\n\t\t}else{\n\t\t\tthis.prefixes[guild.id] = defaultTag;\n\t\t\tfs.writeFileSync(filePath, JSON.stringify(this.prefixes));\n\t\t}\n\n\t\tlet tag = this.prefixes[guild.id] || defaultTag;\n\n                if(Array.isArray(this.prefixes)){ \n                  console.log(\"Old version serverPrefixes.json detected.  Please remove serverPrefixes.json and restart your bot otherwise setting new prefixes will not work!\")\n                  tag = defaultTag;\n                }\n\n\t\tif(tag){\t\n\t\t\tif(guild) guild.tag = tag;\t\n\n\t\t\tif(content.startsWith(tag)) {\t\t\t\t\n\t\t\t\tlet command = content.substring(tag.length);\n\t\t\t\tif(command) {       \n\t\t\t\t\tif(!Bot._caseSensitive) {\n\t\t\t\t\t\tcommand = command.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tconst cmd = Bot.$cmds[command];\n\t\t\t\t\tif(cmd) {\t\t\t\t\t\n\t\t\t\t\t\tActions.preformActions(msg, cmd);\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\t\t\t\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n   \n};\nconsole.log('(Server Prefixes) Loaded Function Overwrite: CheckCommand');\n","storage":"0","varName":"","name":"Run Script"}]},{"name":"reactionGet","temp":"msgReaction","event-type":"28","_id":"zimku","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nconst rectarray = globalVars('reactionRoleInf');\nvar usrWhoReacted = reaction.users.last();\nconst _this = this;\nvar messageSent = 'Successfully added the role {roleName} in {server}'; \nvar interval;\nvar arrayNum;\n\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\n\nasync function checkRoles() {\n\tif (usrWhoReacted.id != client.user.id) {\n\t\tif (usrWhoReacted.data('cooldownData.reactionMenu') != 1) {\n\t\t\tfor (i = 0; i < rectarray.length; i++) {\n\t\t\t\tif (rectarray[i][msgRct.id] != null) {\n                    arrayNum = i;\n\t\t\t\t\tvar newArr = rectarray[i][msgRct.id];\n\t\t\t\t\tfor (io = 0; io < newArr.length; io++) {\n\t\t\t\t\t\tif (newArr[io][0] == reaction.emoji.name) {\n\t\t\t\t\t\t\tvar newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n\t\t\t\t\t\t\tvar checkRole = await msgRct.guild.roles.get(newArr[io][1])\n\t\t\t\t\t\t\tif (checkRole != null) {\n\t\t\t\t\t\t\t\tif (newUsr.roles.has(newArr[io][1])) {\n                                    usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n\t\t\t\t\t\t\t\t\tvar tempThing = globalVars('reactionRoleInf');\n\t\t\t\t\t\t\t\t\ttempThing[i][msgRct.id][3] = await reaction.users.array();\n                                    _this.storeValue(tempThing, 3, 'reactionRoleInf', cache)\n                                    interval = setInterval(resetTimer, 1000)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else {\n                                    usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n\t\t\t\t\t\t\t\t\tvar tempThing = globalVars('reactionRoleInf');\n\t\t\t\t\t\t\t\t\ttempThing[i][msgRct.id][3] = await reaction.users.array();\n\t\t\t\t\t\t\t\t\t_this.storeValue(tempThing, 3, 'reactionRoleInf', cache)\n\t\t\t\t\t\t\t\t\tnewUsr.addRole(newArr[io][1]);\n\t\t\t\t\t\t\t\t\tif (dmUserAfter) {\n                                        messageSent = messageSent.replace(/{roleName}/g, newArr[io][2]);\n                                        messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n\t\t\t\t\t\t\t\t\t\tnewUsr.send(messageSent);\n                                    }\n                                    interval = setInterval(resetTimer, 1000)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n                                var newArray = rectarray.filter(someItem => {\n                                    someItem.hasOwnProperty(msgRct.id) != true\n                                })\n                                _this.storeValue(newArray, 3, 'reactionRoleInf', cache);\n                                _this.storeValue(JSON.stringify(newArray), 3, 'tempData', cache);\n\t\t\t\t\t\t\t\tmsgRct.edit({\n\t\t\t\t\t\t\t\t\tembed: {\n\t\t\t\t\t\t\t\t\t\tcolor: 0xff0000,\n\t\t\t\t\t\t\t\t\t\ttitle: \"Role Reaction Menu\",\n\t\t\t\t\t\t\t\t\t\tdescription: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n\t\t\t\t\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t\t\t\t\t}\n                                });\n                                _this.callNextAction(cache);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n            usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n        }\n\t}\n\n}\n\nfunction resetTimer() {\n    usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n    clearInterval(interval);\n}\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"},{"storage":"3","varName":"tempData","name":"Save Variable"}]},{"name":"reactionRev","temp":"msgReaction","event-type":"29","_id":"ZQmhC","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nconst rectarray = globalVars('reactionRoleInf');\nvar usrWhoReacted = reaction.users.array();\nconst _this = this;\nvar messageSent = 'Successfully added the role {roleName} in {server}'; \n// The only variables that work rn, {rolename} and {server}\nvar actualUser;\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\n\nasync function checkRoles() {\n\tfor (i = 0; i < rectarray.length; i++) {\n\t\tif (rectarray[i][msgRct.id] != null) {\n            arrayNum = i;\n\t\t\tif (rectarray[i][msgRct.id][3] != null) {\n\t\t\t\tusrWhoReacted = rectarray[i][msgRct.id][3].filter(val => !usrWhoReacted.includes(val))[0];\n\t\t\t\tif (usrWhoReacted != null) {\n\t\t\t\t\tif (usrWhoReacted.data('cooldownData.reactionMenu') != 1) {\n\t\t\t\t\t\tvar newArr = rectarray[i][msgRct.id];\n\t\t\t\t\t\tfor (io = 0; io < newArr.length; io++) {\n\t\t\t\t\t\t\tif (newArr[io][0] == reaction.emoji.name) {\n\t\t\t\t\t\t\t\tvar newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n\t\t\t\t\t\t\t\tvar checkRole = await msgRct.guild.roles.get(newArr[io][1]);\n\t\t\t\t\t\t\t\tif (checkRole != null) {\n\t\t\t\t\t\t\t\t\tif (!newUsr.roles.has(newArr[io][1])) {\n                                        usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n                                        var tempThing = globalVars('reactionRoleInf');\n\t\t\t\t\t\t\t\t\t    tempThing[i][msgRct.id][3] = await reaction.users.array();\n                                        _this.storeValue(tempThing, 3, 'reactionRoleInf', cache);\n                                        interval = setInterval(resetTimer, 1000);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t} else {\n                                        var tempThing = globalVars('reactionRoleInf');\n                                        usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n\t\t\t\t\t\t\t\t\t\ttempThing[i][msgRct.id][3] = await reaction.users.array();\n\t\t\t\t\t\t\t\t\t\t_this.storeValue(tempThing, 3, 'reactionRoleInf', cache)\n\t\t\t\t\t\t\t\t\t\tnewUsr.removeRole(newArr[io][1]);\n\t\t\t\t\t\t\t\t\t\tif (dmUserAfter) {\n\t\t\t\t\t\t\t\t\t\t\tmessageSent = messageSent.replace(/{roleName}/g, newArr[io][2]);\n                                            messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n\t\t\t\t\t\t\t\t\t\t    newUsr.send(messageSent);\n                                        }\n                                        interval = setInterval(resetTimer, 1000);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n                                    var newArray = rectarray.filter(someItem => {\n                                        someItem.hasOwnProperty(msgRct.id) != true\n                                    })\n                                    _this.storeValue(newArray, 3, 'reactionRoleInf', cache);\n                                    _this.storeValue(JSON.stringify(newArray), 3, 'tempData', cache);\n\t\t\t\t\t\t\t\t\tmsgRct.edit({\n\t\t\t\t\t\t\t\t\t\tembed: {\n\t\t\t\t\t\t\t\t\t\t\tcolor: 0xff0000,\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Role Reaction Menu\",\n\t\t\t\t\t\t\t\t\t\t\tdescription: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n\t\t\t\t\t\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t\t\t\t\t\t}\n                                    });\n                                    _this.callNextAction(cache);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n                        usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nfunction resetTimer() {\n    usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n    clearInterval(interval);\n}\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"},{"storage":"3","varName":"tempData","name":"Save Variable"}]},{"name":"reactionStart","temp":"","event-type":"1","_id":"Lwriz","actions":[{"storage":"3","varName":"reactionRoleInf","changeType":"0","value":"[]","name":"Control Variable"},{"behavior":"0","interpretation":"1","code":"const _this = this;\nconst fs = require('fs');\nvar someArray = [];\nvar someNum = 0;\nvar globalData;\nvar interval;\n\nfs.readFile('./data/globalVars.json', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    var savedVars = JSON.parse(data);\n    \n    if (savedVars.hasOwnProperty('tempData')) {\n        var newThing = savedVars.tempData.replace(/[\\\\]/g,'');\n        try {\n            _this.storeValue(JSON.parse(newThing), 3, 'reactionRoleInf', cache);\n            console.log('Saved reactionRoleInf');\n        } catch (e) {\n            console.log('Invalid JSON - Saved Vars')\n        }\n    }\n\n    if(fs.existsSync('./resources/serverRoleMenu.json')) {\n        fs.readFile('./resources/serverRoleMenu.json', async function read(err, data) {\n            if (err) {\n                throw err;\n            }\n            var DataToLoop = JSON.parse(data);\n            globalData = DataToLoop;\n            for (var key in DataToLoop) {\n                if (DataToLoop.hasOwnProperty(key)) {\n                    await someArray.push(DataToLoop[key]);\n                }\n            }\n            interval = setInterval(fetchMessages, 2000);\n        })\n\n    } else {\n        fs.writeFile(\"./resources/serverRoleMenu.json\", \"{}\", function(err) {\n            if(err) {\n                return console.log(err);\n            }\n        });\n    }\n});\n\nfunction fetchMessages() {\n if (someNum != someArray.length) {\n     var channelToFetch = client.channels.get(someArray[someNum]);\n     if (channelToFetch != null) {\n        channelToFetch.fetchMessages({ limit: 100 });\n        console.log(`Fetched messages in channel id ${someArray[someNum]}`);\n        someNum = someNum + 1;\n     } else {\n        delete globalData[someArray[someNum]];\n        fs.writeFile(\"./resources/serverRoleMenu.json\", JSON.stringify(globalData), function(err) {\n            if(err) {\n                return console.log(err);\n            }\n        }); \n     }\n } else {\n    console.log('Finished fetching messages from all logged servers.')\n    clearInterval(interval);\n }\n}","storage":"0","varName":"","name":"Run Script"}]},{"name":"time","temp":"30","event-type":"3","_id":"nuUDP","actions":[{"type":"3","storage":"2","varName":"hour","name":"Store Time Info"},{"type":"4","storage":"2","varName":"minute","name":"Store Time Info"},{"info":"0","find":"535903471581528124","storage":"1","varName":"server","name":"Find Server"},{"info":"0","find":"535929626397245470","storage":"1","varName":"voice channe","name":"Find Voice Channel"},{"FirstNumber":"${serverVars(\"hour\")}","info":"0","SecondNumber":"1","storage":"1","varName":"hourtrue","name":"Basic Math Operation"},{"storage":"2","varName":"minute","comparison":"3","value":"10","iftrue":"2","iftrueVal":"9","iffalse":"0","iffalseVal":"","name":"Check Variable"},{"storage":"3","varName":"voice channe","toChange":"name","newState":"Godzina: ${tempVars(\"hourtrue\")}:${serverVars(\"minute\")}","name":"Edit Channel"},{"name":"End Action Sequence"},{"storage":"2","varName":"minute","comparison":"1","value":"0","iftrue":"2","iftrueVal":"12","iffalse":"0","iffalseVal":"","name":"Check Variable"},{"storage":"3","varName":"voice channe","toChange":"0","newState":"Godzina: ${tempVars(\"hourtrue\")}:0${serverVars(\"minute\")}","name":"Edit Channel"},{"name":"End Action Sequence"},{"storage":"3","varName":"voice channe","toChange":"0","newState":"Godzina: ${tempVars(\"hourtrue\")}:00","name":"Edit Channel"},{"name":"End Action Sequence"}]},{"name":"storeInvites|InviteManager","temp":"","event-type":"1","_id":"CdzGK","actions":[{"behavior":"0","interpretation":"0","code":"const fs = require('fs');\nvar invites = {};\n\nclient.guilds.forEach(g => {\n    g.fetchInvites().then(guildInvites => {\n      try{\n        invites[g.id] = guildInvites;\n      }\n      catch(error) {\n        console.log(error);\n      }\n    });\n  });\n\nthis.storeValue(invites, 3, \"globalGuildDatabase\", cache);","storage":"0","varName":"","name":"Run Script"}]},{"name":"serverJoin|InviteManager","temp":"","event-type":"4","_id":"zUtVB","actions":[{"server":"0","varName":"","info":"0","storage":"1","varName2":"serverObject","name":"Store Server Info"},{"behavior":"0","interpretation":"0","code":"_this = this;\nvar guildServer = tempVars(\"serverObject\");\nvar globalGuildDatabase = globalVars(\"globalGuildDatabase\");\nserverID = tempVars(\"serverID\");\n\nasync function getInvites() {\n   var guildInvites = guildServer.fetchInvites()\n   globalGuildDatabase[guildServer.id] = guildInvites;\n   this.storeValue(invites, 3, \"globalGuildDatabase\", cache);\n}","storage":"0","varName":"","name":"Run Script"}]},{"name":"memberJoin|InviteManager","temp":"memberJoined","event-type":"6","_id":"bbJRl","actions":[{"behavior":"1","interpretation":"0","code":"let memberThatJoined = tempVars(\"memberJoined\");\nlet memberUsername = memberThatJoined.username;\nlet invites = globalVars(\"globalGuildDatabase\");\nconst _this = this;\n\nasync function getInvites() {\n    const ei = invites[memberThatJoined.guild.id];\n    let guildInvites = await memberThatJoined.guild.fetchInvites();\n    guildInvites = guildInvites.array();\n    invites[memberThatJoined.guild.id] = guildInvites;\n    _this.storeValue(invites, 3, \"globalGuildDatabase\", cache);\n    const invite = guildInvites.find(i => ei.get(i.code).uses < i.uses);\n    const inviter = client.users.get(invite.inviter.id);\n    _this.storeValue(invite.code, 1, \"inviteCode\", cache);\n    _this.callNextAction(cache);\n}\n\ngetInvites();","storage":"0","varName":"","name":"Run Script"},{"server":"0","varName":"","info":"1","storage":"1","varName2":"serverID","name":"Store Server Info"},{"member":"2","varName":"memberJoined","dataName":"${tempVars(\"serverID\")}.inviteManager","changeType":"0","value":"tempVars(\"inviteCode\")","name":"Control Member Data"}]},{"name":"Join message ","temp":"member","event-type":"6","_id":"wcUbJ","actions":[{"member":"2","varName":"member","info":"0","storage":"1","varName2":"object","name":"Store Member Info"},{"member":"2","varName":"member","info":"16","storage":"1","varName2":"url","name":"Store Member Info"},{"server":"0","varName":"","info":"18","storage":"1","varName2":"count","name":"Store Server Things"},{"title":"Użytkownik wbił na serwer!","author":"","color":"","timestamp":"true","url":"","authorIcon":"","imageUrl":"","thumbUrl":"${tempVars(\"url\")}","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","message":"${tempVars(\"object\")} wbił na serwer! \nJest on naszym **${tempVars(\"count\")}** członkiem!","name":"Set Embed Description"},{"storage":"1","varName":"embed","channel":"6","varName2":"welcomechannel","storage3":"0","varName3":"","name":"Send Embed Message"},{"member":"2","varName":"member","info":"0","varName2":"","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If Member"},{"info":"1","find":"weryfikacja","storage":"1","varName":"channel","name":"Find Channel"},{"channel":"3","varName":"channel","info":"1","search":"537566630725550081","storage":"1","varName2":"message","name":"Find Message"},{"message":"1","varName":"message","info":"1","find":"✅","storage":"1","varName2":"findreaction","name":"Find Reaction"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reaction":"1","varName2":"findreaction","iftrue":"2","iftrueVal":"85","iffalse":"0","iffalseVal":"","name":"Check If User Reacted"},{"time":"5","measurement":"1","name":"Wait"},{"member":"2","varName":"member","reason":"Nie zareagowałeś na emotkę weryfikacyjną!","name":"Kick Member"},{"name":"End Action Sequence"},{"info":"1","find":"Gracz","storage":"1","varName":"role","name":"Find Role"},{"member":"2","varName2":"member","role":"3","varName":"role","name":"Add Member Role"},{"name":"End Action Sequence"}]},{"name":"Leave message","temp":"member","event-type":"7","_id":"agqDS","actions":[{"member":"2","varName":"member","info":"0","storage":"1","varName2":"object","name":"Store Member Info"},{"member":"2","varName":"member","info":"16","storage":"1","varName2":"url","name":"Store Member Info"},{"server":"0","varName":"","info":"18","storage":"1","varName2":"count","name":"Store Server Things"},{"title":"Użytkownik wyszedł z serwera!","author":"","color":"","timestamp":"true","url":"","authorIcon":"","imageUrl":"","thumbUrl":"${tempVars(\"url\")}","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","message":"Użytkownik ${tempVars(\"object\")} wyszedł z serwera!\nAktualnie na serwerze jest **${tempVars(\"count\")}** użytkowników!","name":"Set Embed Description"},{"storage":"1","varName":"embed","channel":"6","varName2":"leavechannel","storage3":"0","varName3":"","name":"Send Embed Message"}]},{"name":"gameactivity","temp":"10","event-type":"3","_id":"qXWDs","actions":[{"info":"3","storage":"1","varName2":"guilds","name":"Store Bot Client Info"},{"info":"4","storage":"1","varName2":"users","name":"Store Bot Client Info"},{"activity":"0","nameText":"Znajduję się aktualnie na ${tempVars(\"guilds\")} serwerach","url":"","stat":"0","name":"Set Bot Activity"},{"time":"5","measurement":"1","name":"Wait"},{"activity":"0","nameText":"Aktualnie obsługuję ${tempVars(\"users\")} ludzi!","url":"","stat":"0","name":"Set Bot Activity"}]}]